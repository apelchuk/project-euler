//Each new term in the Fibonacci sequence is generated by adding 
//the previous two terms. 
//By starting with 1 and 2, the first 10 terms will be:

//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

//By considering the terms in the Fibonacci sequence whose values 
//do not exceed four million, find the sum of the even-valued terms.


var sum = 0; 
var x = 1; 
var y = 2;
var z = 0;

while(z < 4000000) { 
	if(z % 2 === 0){ 
		sum += z; 
	}
	z = x + y;
	x = y; 
	y = z;
}

console.log(sum);

//line 11: Looking for value of sum, therefore we set it as our first valuable
//line 12: Value of our first number within the Fibonacci Sequence
//line 13: Value of our second number within the Fibonacci Sequence
//line 14: Value of our third number within the Fibonacci Sequence. This number is going to be the sum of the first and second number, which should be an even number
//line 16: running a loop that will stop when our third value is no longer less than 4 million, as described in the practice problem  
//line 17: conditional stating that our third value must be an even number by returning a remainder of 0 when divided by 2
//line 18: if our conditional is 'true', then we want to take the value of that number z and add it to the total sum of the number we are looking for 
//line 20: restating that our third value is a sum of our first two numbers
//line 21: the first number is now replacing the value of our second number as we move further along the sequence after true conditional 
//line 22: the second number is now replacing the value of our third number as we move further along the sequence after true conditional
//line 25: printing out the sum of the true conditional statements
